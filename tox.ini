[tox]
envlist = lint,packaging,py{36,37,38}
minversion = 3.7
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {basepython}
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    VIRTUALENV_NO_DOWNLOAD = 1
    # isolate testing to avoid using developer config files:
    HOME = {toxworkdir}
passenv =
    PYTEST_*
    PYTHONHTTPSVERIFY
    REQUESTS_CA_BUNDLE
    SSL_CERT_FILE
    TERM
    http_proxy
    https_proxy
    no_proxy
deps =
    pip == 19.1.1
whitelist_externals = bash
commands =
    gri --help
    -gri -o report.html owned incoming merged abandon draft watched

[testenv:lint]
basepython = python3.7
passenv = {[testenv]passenv}
          # without PROGRAMDATA cloning using git for Windows will fail with an
          # `error setting certificate verify locations` error
          PROGRAMDATA
extras = lint
deps =
    pre-commit >= 1.14.4, < 2
    twine
    readme-renderer[md] >= 24.0
    pip >= 18.0.0
    pep517
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
commands =
    python -m pre_commit run --all-files --show-diff-on-failure
    bash -c "rm -rf {toxinidir}/dist/ && mkdir -p {toxinidir}/dist/"
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    twine check dist/*

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
deps =
    collective.checkdocs >= 0.2
    pep517 >= 0.8.2
    pip >= 20.2.2
    toml >= 0.10.1
    twine >= 3.2.0  # pyup: ignore
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    sh -c "python -m twine check {toxinidir}//dist/*"
whitelist_externals =
    rm
    sh
